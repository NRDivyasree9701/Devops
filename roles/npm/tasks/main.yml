---
# tasks file for npm
- name: Ensure apt cache is up-to-date
  apt:
    update_cache: yes
  become: yes

- name: Install dependencies
  apt:
    name:
      - curl
      - wget
      - software-properties-common
      - bash
    state: present
  become: yes

    #- name: Remove existing Node.js (if any)
  #apt:
    #name: nodejs
      #state: absent
      #become: yes

- name: Download NodeSource script
  shell: curl -fsSL https://deb.nodesource.com/setup_{{ node_version }} | bash -
  become: yes

- name: Install Node.js (npm included)
  apt:
    name: nodejs
    state: present
  become: yes
  notify: Restart nginx

- name: Verify npm and Node.js versions
  shell: |
    echo "Node.js version: $(node -v)"
    echo "npm version: $(npm -v)"
  register: versions
  changed_when: false
  become: yes

- name: Display Node.js and npm versions
  debug:
    msg: "{{ versions.stdout }}"

- name: Check if NVM is already installed
  stat:
    path: ~/.nvm/nvm.sh
  register: nvm_installed

- name: Install NVM if not already installed
  shell: curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash
  args:
    executable: /bin/bash
  when: not nvm_installed.stat.exists

- name: Load NVM into bashrc
  lineinfile:
    path: ~/.bashrc
    line: 'export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"'
    create: yes
  when: not nvm_installed.stat.exists

- name: Source bashrc
  shell: source ~/.bashrc
  args:
    executable: /bin/bash
  when: not nvm_installed.stat.exists

- name: Ensure NVM is available
  shell: >
    export NVM_DIR="$HOME/.nvm" &&
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" &&
    command -v nvm
  args:
    executable: /bin/bash
  register: nvm_check
  changed_when: false


- name: Install PM2 globally
  npm:
    name: pm2
    global: yes
    state: present
    version: "{{ pm2_version }}"

- name: Set up PM2 as a startup service
  command: pm2 startup systemd
  register: pm2_startup_output
  changed_when: true

- name: Enable PM2 on startup
  shell: systemctl enable pm2-root
  args:
    executable: /bin/bash
  become: yes

- name: Save PM2 process list
  shell: pm2 save
  become: yes
